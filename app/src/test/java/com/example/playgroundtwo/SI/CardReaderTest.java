package com.example.playgroundtwo.SI;

import org.junit.Assert;
import org.junit.Test;

public class CardReaderTest {

    private int card6Format = 0xe6;
    private int card5Format = 0xe5;
    private int card9Format = 0xe8;


    private int [] siCard9_15Data = new int [] {0xe6,0x7a,0xfb,0x99,0xea,0xea,0xea,0xea,0x30,0x2,0x92,0x80,0x30,0x3,0x93,
            0x74,0x30,0x4,0xa4,0x32,0xf,0x7f,0x10,0x9,0xf,0x6f,0x64,0x89,0x4,0xf,0xed,0xe9,0x4b,0x61,0x72,0x65,0x6e,0x3b,
            0x59,0x65,0x6f,0x77,0x65,0x6c,0x6c,0x3b,0x66,0x3b,0x3b,0x4e,0x45,0x4f,0x43,0x3b,0x3b,0x3b,0x57,0x65,0x73,0x74,
            0x62,0x6f,0x72,0x6f,0x75,0x67,0x68,0x2c,0x20,0x4d,0x41,0x3b,0x3b,0x3b,0x55,0x53,0x41,0x3b,0xee,0xee,0x68,0x69,
            0x6e,0x67,0x74,0x6f,0x6e,0x20,0x53,0x74,0x3b,0x39,0x30,0x38,0x30,0x35,0x2d,0x36,0x31,0x3b,0xea,0xea,0xea,0xea,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0x30,0x97,0x94,0x1b,0x30,0x98,0x94,0xcc,0x30,0x99,0x96,0xce,0x30,0x94,0x98,0x12,0x30,0x9a,0x99,0x84,
            0x30,0x9b,0x99,0xf7,0x30,0x9c,0x9a,0x8a,0x30,0x9e,0x9c,0xbc,0x30,0x9f,0x9d,0xcc,0x30,0xa0,0x9e,0xc3,0x30,0x95,
            0xa0,0x3d,0x30,0x8c,0xa1,0x5,0x30,0xa2,0xa1,0xcb,0x30,0xa3,0xa2,0x3b,0x30,0xa1,0xa2,0xe1,0x30,0x8d,0xa3,0xda,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee};

   private int [] siCard9_4Data = new int [] {0xcc,0x6f,0xc4,0x80,0xea,0xea,0xea,0xea,0x2c,0xb,0x97,0xae,0x2c,0xc,0x97,0xbb,0x2c,0xc4,
            0x9d,0xaa,0x0,0x73,0x8,0xa6,0x4,0x46,0x7c,0x28,0xc,0xff,0x3c,0xd3,0x34,0x36,0x31,0x39,0x33,0x30,0x34,0x3b,0x53,
            0x63,0x61,0x72,0x62,0x6f,0x72,0x6f,0x75,0x67,0x68,0x20,0x4f,0x72,0x69,0x65,0x6e,0x74,0x65,0x65,0x72,0x69,0x6e,
            0x67,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x3b,0x55,0x53,0x41,0x3b,0x13,0x1e,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x2c,0x65,0x97,0xe6,0x2c,0x6b,0x99,0x13,0x2c,0x6d,0x99,0xb8,0x2c,0x7b,0x9a,0x28,0x2c,0x71,0x9c,
            0x1b,0x2c,0x79,0x9c,0x65,0x2c,0x77,0x9c,0xdd,0x2c,0x73,0x9d,0x36,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee};

   private int [] siCard9_2Data = new int [] {0x32,0xbe,0x8a,0x8d,0xea,0xea,0xea,0xea,0x30,0x2,0x97,0xbb,0x30,0x3,0x97,0xc4,0x30,
            0x4,0xa7,0x89,0x0,0x8d,0x10,0xec,0x2,0x20,0x2b,0xd1,0xc,0xff,0xa6,0x4c,0x4d,0x61,0x72,0x6b,0x3b,0x4f,0x43,0x6f,
            0x6e,0x6e,0x65,0x6c,0x6c,0x3b,0xee,0xee,0x75,0x67,0x68,0x20,0x4f,0x72,0x69,0x65,0x3b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x30,0x97,0x98,0x48,0x30,0x98,0x98,0xf7,0x30,0x99,
            0x9a,0x33,0x30,0x94,0x9b,0x48,0x30,0x9a,0x9c,0x90,0x30,0x9b,0x9c,0xf7,0x30,0x9c,0x9d,0x86,0x30,0x9e,0x9f,0xb6,0x30,
            0x9f,0xa1,0x36,0x30,0xa0,0xa2,0x29,0x30,0x95,0xa3,0xb1,0x30,0x8c,0xa4,0x7f,0x30,0xa2,0xa5,0x30,0x30,0xa3,0xa5,0xaf,
            0x30,0xa1,0xa6,0x3e,0x30,0x8d,0xa7,0x33,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee};

   private int [] siCard5Data = new int [] {0x2,0xb1,0x82,0x0,0x13,0xaa,0xfe,0xfe,0xfe,0x4f,0x7f,0x4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
            0x0,0x65,0x4f,0x7f,0x94,0x6f,0x9,0xeb,0x8,0x56,0x93,0xb2,0x28,0x4,0xd2,0x0,0x7,0x0,0x65,0x94,0xe3,0x95,0x97,0x15,
            0x9e,0x9b,0x94,0xa5,0x9f,0x79,0xa2,0xa4,0x81,0x0,0xa3,0xa7,0x46,0xa4,0x0,0x39,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,
            0xee,0x0,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0x0,0xee,0xee,0x0,0xee,0xee,0x0,
            0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,
            0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0x0,0xee,0xee,0xe,0xe,0x3};

   private int [] siCard9_1Data = new int [] {0xa4,0xc8,0x12,0x7f,0xea,0xea,0xea,0xea,0x11,0x4a,0xe,0x84,0x11,0x4b,0xe,0xa8,0xee,
            0xee,0xee,0xee,0x0,0x3c,0x6,0xd,0x1,0x15,0x5b,0x53,0xc,0xff,0x13,0xfc,0x31,0x33,0x39,0x39,0x36,0x33,0x35,0x3b,
            0x53,0x63,0x61,0x72,0x62,0x6f,0x72,0x6f,0x75,0x67,0x68,0x20,0x4f,0x72,0x69,0x65,0x11,0x2d,0x10,0xa3,0x11,0x3a,
            0x11,0xc4,0x11,0x28,0x12,0x1e,0x11,0x39,0x13,0x10,0x11,0x33,0x15,0x1d,0x11,0x3c,0x15,0x7e,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,
            0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee,0xee};

   private byte[] convertIntArrayToByteArray(int [] inArray) {
       byte [] outArray = new byte[inArray.length];
       for (int i = 0; i < inArray.length; i++) {
           outArray[i] = (byte) inArray[i];
       }

       return (outArray);
   }

    @Test
    public void testReadCard5Data() {
       CardReader.CardEntry entry = new CardReader.CardEntry();
       byte [] cardData = convertIntArrayToByteArray(siCard5Data);

       CardReader testingReader = new CardReader(null, null);
       boolean returnValue = testingReader.parseArtificialCardData(card5Format, cardData, entry);

       Assert.assertTrue(returnValue);

       // Note timestamps come back in milliseconds
       Assert.assertEquals(7, entry.punches.size());
       Assert.assertEquals(37999000, entry.startTime);
       Assert.assertEquals(45739000, entry.finishTime);
   }

    @Test
    public void testReadCard9Data_test1() {
        CardReader.CardEntry entry = new CardReader.CardEntry();
        byte [] cardData = convertIntArrayToByteArray(siCard9_15Data);

        CardReader testingReader = new CardReader(null, null);
        boolean returnValue = testingReader.parseArtificialCardData(card9Format, cardData, entry);

        Assert.assertTrue(returnValue);

        // Note timestamps come back in milliseconds
        int expectedStartTime = ((10 * 3600) + (29 * 60) + 8) * 1000;

        Assert.assertEquals(16, entry.punches.size());
        Assert.assertEquals(expectedStartTime, entry.startTime);
        Assert.assertEquals(expectedStartTime + (4286 * 1000), entry.finishTime);
    }

    @Test
    public void testReadCard9Data_test2() {
        CardReader.CardEntry entry = new CardReader.CardEntry();
        byte [] cardData = convertIntArrayToByteArray(siCard9_2Data);

        CardReader testingReader = new CardReader(null, null);
        boolean returnValue = testingReader.parseArtificialCardData(card9Format, cardData, entry);

        Assert.assertTrue(returnValue);

        // Note timestamps come back in milliseconds
        Assert.assertEquals(16, entry.punches.size());
        Assert.assertEquals(38852000, entry.startTime);
        Assert.assertEquals(42889000, entry.finishTime);
    }

}
